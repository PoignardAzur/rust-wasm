(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8b\80\80\80\00"
  "\01\85\80\80\80\00\00\41\7f\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8f\80\80\80\00"
  "\01\89\80\80\80\00\00\41\80\80\80\80\78\1a\0b"
)
(assert_malformed
  (module quote "(func (i32.const 0x100000000) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (i32.const -0x80000001) drop)")
  "constant out of range"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8b\80\80\80\00"
  "\01\85\80\80\80\00\00\41\7f\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8f\80\80\80\00"
  "\01\89\80\80\80\00\00\41\80\80\80\80\78\1a\0b"
)
(assert_malformed
  (module quote "(func (i32.const 4294967296) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (i32.const -2147483649) drop)")
  "constant out of range"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8b\80\80\80\00"
  "\01\85\80\80\80\00\00\42\7f\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\94\80\80\80\00"
  "\01\8e\80\80\80\00\00\42\80\80\80\80\80\80\80\80"
  "\80\7f\1a\0b"
)
(assert_malformed
  (module quote "(func (i64.const 0x10000000000000000) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (i64.const -0x8000000000000001) drop)")
  "constant out of range"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8b\80\80\80\00"
  "\01\85\80\80\80\00\00\42\7f\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\94\80\80\80\00"
  "\01\8e\80\80\80\00\00\42\80\80\80\80\80\80\80\80"
  "\80\7f\1a\0b"
)
(assert_malformed
  (module quote "(func (i64.const 18446744073709551616) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (i64.const -9223372036854775809) drop)")
  "constant out of range"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8e\80\80\80\00"
  "\01\88\80\80\80\00\00\43\00\00\00\7f\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8e\80\80\80\00"
  "\01\88\80\80\80\00\00\43\00\00\00\ff\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8e\80\80\80\00"
  "\01\88\80\80\80\00\00\43\ff\ff\7f\7f\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8e\80\80\80\00"
  "\01\88\80\80\80\00\00\43\ff\ff\7f\ff\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8e\80\80\80\00"
  "\01\88\80\80\80\00\00\43\ff\ff\7f\7f\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8e\80\80\80\00"
  "\01\88\80\80\80\00\00\43\ff\ff\7f\ff\1a\0b"
)
(assert_malformed
  (module quote "(func (f32.const 0x1p128) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (f32.const -0x1p128) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (f32.const 0x1.ffffffp127) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (f32.const -0x1.ffffffp127) drop)")
  "constant out of range"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8e\80\80\80\00"
  "\01\88\80\80\80\00\00\43\99\76\96\7e\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8e\80\80\80\00"
  "\01\88\80\80\80\00\00\43\99\76\96\fe\1a\0b"
)
(assert_malformed
  (module quote "(func (f32.const 1e39) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (f32.const -1e39) drop)")
  "constant out of range"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8e\80\80\80\00"
  "\01\88\80\80\80\00\00\43\ff\ff\7f\7f\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\8e\80\80\80\00"
  "\01\88\80\80\80\00\00\43\ff\ff\7f\ff\1a\0b"
)
(assert_malformed
  (module quote
    "(func (f32.const 340282356779733661637539395458142568448) drop)"
  )
  "constant out of range"
)
(assert_malformed
  (module quote
    "(func (f32.const -340282356779733661637539395458142568448) drop)"
  )
  "constant out of range"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\92\80\80\80\00"
  "\01\8c\80\80\80\00\00\44\00\00\00\00\00\00\e0\7f"
  "\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\92\80\80\80\00"
  "\01\8c\80\80\80\00\00\44\00\00\00\00\00\00\e0\ff"
  "\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\92\80\80\80\00"
  "\01\8c\80\80\80\00\00\44\ff\ff\ff\ff\ff\ff\ef\7f"
  "\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\92\80\80\80\00"
  "\01\8c\80\80\80\00\00\44\ff\ff\ff\ff\ff\ff\ef\ff"
  "\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\92\80\80\80\00"
  "\01\8c\80\80\80\00\00\44\ff\ff\ff\ff\ff\ff\ef\7f"
  "\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\92\80\80\80\00"
  "\01\8c\80\80\80\00\00\44\ff\ff\ff\ff\ff\ff\ef\ff"
  "\1a\0b"
)
(assert_malformed
  (module quote "(func (f64.const 0x1p1024) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (f64.const -0x1p1024) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (f64.const 0x1.fffffffffffff8p1023) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (f64.const -0x1.fffffffffffff8p1023) drop)")
  "constant out of range"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\92\80\80\80\00"
  "\01\8c\80\80\80\00\00\44\a0\c8\eb\85\f3\cc\e1\7f"
  "\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\92\80\80\80\00"
  "\01\8c\80\80\80\00\00\44\a0\c8\eb\85\f3\cc\e1\ff"
  "\1a\0b"
)
(assert_malformed
  (module quote "(func (f64.const 1e309) drop)")
  "constant out of range"
)
(assert_malformed
  (module quote "(func (f64.const -1e309) drop)")
  "constant out of range"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\92\80\80\80\00"
  "\01\8c\80\80\80\00\00\44\ff\ff\ff\ff\ff\ff\ef\7f"
  "\1a\0b"
)
(module binary
  "\00\61\73\6d\01\00\00\00\01\84\80\80\80\00\01\60"
  "\00\00\03\82\80\80\80\00\01\00\0a\92\80\80\80\00"
  "\01\8c\80\80\80\00\00\44\ff\ff\ff\ff\ff\ff\ef\ff"
  "\1a\0b"
)
(assert_malformed
  (module quote
    "(func (f64.const 269653970229347356221791135597556535197105851288767494898376215204735891170042808140884337949150317257310688430271573696351481990334196274152701320055306275479074865864826923114368235135583993416113802762682700913456874855354834422248712838998185022412196739306217084753107265771378949821875606039276187287552) drop)"
  )
  "constant out of range"
)
(assert_malformed
  (module quote
    "(func (f64.const -269653970229347356221791135597556535197105851288767494898376215204735891170042808140884337949150317257310688430271573696351481990334196274152701320055306275479074865864826923114368235135583993416113802762682700913456874855354834422248712838998185022412196739306217084753107265771378949821875606039276187287552) drop)"
  )
  "constant out of range"
)
